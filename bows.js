// Generated by CoffeeScript 1.6.3
(function() {
  var bows, colors, id, logger, nColors, numKeys, prefixes, updateArray, updateArrays,
    __slice = [].slice;

  logger = require('andlog');

  nColors = function(n) {
    var i, r, x, _i;
    i = 360 / n;
    r = [];
    for (x = _i = 0; 0 <= n ? _i <= n : _i >= n; x = 0 <= n ? ++_i : --_i) {
      r.push(i * x);
    }
    return r;
  };

  colors = [];

  id = 0;

  numKeys = 0;

  prefixes = {};

  updateArrays = function() {
    var array, key, lengths, maxLength, _results;
    colors = nColors(numKeys);
    lengths = Object.keys(prefixes).map(function(p) {
      return p.length;
    });
    maxLength = Math.max.apply({}, lengths);
    _results = [];
    for (key in prefixes) {
      array = prefixes[key];
      _results.push(updateArray(key, maxLength));
    }
    return _results;
  };

  updateArray = function(fullkey, padlength) {
    var key, msg, _ref;
    _ref = fullkey.split('-'), key = _ref[0], id = _ref[1];
    msg = "%c" + key;
    msg += Array(padlength + 2 - msg.length).join(' ') + '|';
    prefixes[fullkey][0] = msg;
    return prefixes[fullkey][1] = "color: hsl(" + colors[id] + ",50%,50%); font-weight: bold";
  };

  bows = function(str) {
    var fullkey;
    numKeys += 1;
    fullkey = "" + str + "-" + id;
    prefixes[fullkey] = ['', ''];
    updateArrays();
    id++;
    return function() {
      var args;
      args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      return prefixes[fullkey].concat(args);
    };
  };

  bows.log = logger.log.apply.bind(logger.log, logger);

  if (typeof module !== 'undefined') {
    module.exports = bows;
  } else {
    window.bows = bows;
  }

}).call(this);
